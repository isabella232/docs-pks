---
title: Configuring an Azure Load Balancer for the PKS API
owner: PKS
---

This topic describes how to create a load balancer for the <%= vars.product_full %> API
using Azure.

Refer to the procedures in this topic to create a load balancer using Azure. To use a different
load balancer, use this topic as a guide.  

##<a id='overview'></a> Overview

To configure your <%= vars.control_plane %> Load Balancer on Azure, complete the following:  

* [Identify Your <%= vars.control_plane %> VM](#identify)  
* [Configure a Load Balancer Backend Pool](#configure-backend-pool)  
* [Create Health Probe](#create-health-probes)  
* [Create Load Balancing Rule](#create-health-probes)  
* [Create Inbound Security Rule](#create-inbound-rule)  
* [Verify Hostname Resolution](#verify)  

<p class="note"><strong>Note</strong>: Creating a <%= vars.control_plane %> load balancer is an 
  optional step when installing <%= vars.product_short %> on Azure. 
  <%= vars.recommended_by %> recommends completing the steps below during 
  <%= vars.product_short %> installation to simplify upgrading <%= vars.product_short %> to future versions.
</p>

##<a id='identify'></a> Identify Your <%= vars.control_plane %> VM

Before configuring your Azure Backend Pool you must know which of your VMs is the <%= vars.control_plane %> VM.  

To find the name of your <%= vars.control_plane %> VM, complete either of the following procedures:

* **Use the Azure Dashboard**:  
    1. Open the [Azure Dashboard](https://portal.azure.com).  
    1. In the Azure Dashboard, locate the VM tagged with `instance_group:pivotal-container-service`. 
    This is your <%= vars.control_plane %> VM.  
    1. Note the machine name and IP address for the listed <%= vars.control_plane %> VM.  

* **Use BOSH**:  
    1. On the command line, run `bosh vms`.  
    1. Locate the VM tagged with `instance_group:pivotal-container-service`. 
    This is your <%= vars.control_plane %> VM.  
    1. Note the machine name and IP address for each listed <%= vars.control_plane %> VM.  

##<a id='configure-backend-pool'></a> Configure a Load Balancer Backend Pool
An Azure backend pool is a logical grouping of instances 
that receive similar traffic. 
On Azure, you must configure a load balancer backend pool to route 
your <%= vars.control_plane %> traffic to your <%= vars.control_plane %> VM.  

<p class="note"><strong>Note</strong>: You must reconfigure your 
<%= vars.control_plane %> load balancer backend pool 
whenever you modify your <%= vars.control_plane %> VM.</p>

1. To open the backend pool configuration page for your <%= vars.control_plane %> load balancer, 
do the following:  
    1. From the Azure Dashboard, select **All services** from the left-hand menu.
    1. Select **All Resources** open the **Load Balancers** service.
    1. In the **Settings** menu, select **Backend Pools**.
    1. On the **Backend Pools** page, select the backend pool for your <%= vars.control_plane %> load balancer.
1. In the **Virtual machines** section, complete the following for the 
VM you identified while performing the steps 
in [Identify Your <%= vars.control_plane %> VM](#identify), above:
  1. **Virtual machine**: Select the VM ID for your <%= vars.control_plane %> VM.
  1. **IP address**: Select the IP address corresponding to the VM specified 
  in the **Virtual machine** column.
  ![Backend Pool configuration](images/azure/azure-backend-pool.png)
1. Click **OK**.  

For information about Azure backend pools, see [Backend pools](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-backend-pool#backend-pools) 
in the Azure documentation. For more information about configuring your backend pool, see 
[Remove or add VMs from the backend pool](https://docs.microsoft.com/en-us/azure/load-balancer/tutorial-load-balancer-standard-manage-portal#remove-or-add-vms-from-the-backend-pool) 
in the Azure documentation.  

##<a id='create-health-probes'></a> Create Health Probe

1. From the Azure Dashboard, open the **Load Balancers** service.
1. In the **Settings** menu, select **Health probes**.
1. On the **Health probes** page, click **Add**.
1. On the **Add health probe** page, complete the form as follows:
  1. **Name**: Name the health probe.
  1. **Protocol**: Select **TCP**.
  1. **Port**: Enter `9021`.
  1. **Interval**: Enter the interval of time to wait between probe attempts.
  1. **Unhealthy Threshold**: Enter a number of consecutive probe failures that must occur before
    a VM is considered unhealthy.
1. Click **OK**.

##<a id='create-health-probes'></a> Create Load Balancing Rule

1. From the Azure Dashboard, open the **Load Balancers** service.
1. In the **Settings** menu, select **Load Balancing Rules**.
1. On the **Load balancing rules** page, click **Add**.
1. On the **Add load balancing rules** page, complete the form as follows:
  1. **Name**: Name the load balancing rule.
  1. **IP Version**: Select **IPv4**.
  1. **Frontend IP address**: Select the appropriate IP address. Clients communicate with your load
    balancer on the selected IP address and service traffic is routed to the target VM by this NAT
    rule.
  1. **Protocol**: Select **TCP**.
  1. **Port**: Enter `9021`.
  1. **Backend port**: Enter `9021`.
  1. **Health Probe**: Select the health probe that you created in
    [Create Health Probe](#create-health-probes).
  1. **Session persistence**: Select **None**.
1. Click **OK**.

##<a id='create-inbound-rule'></a> Create Inbound Security Rule

1. From the Azure Dashboard, open the **Security Groups** service.
1. Click the name of the Security Group attached to the subnet where the PKS API is deployed.  
1. In the **Settings** menu for your security group, select **Inbound security rules**.
1. Click **Add**.
1. On the **Add inbound security rule** page, click **Advanced** and complete the form as follows:
  1. **Name**: Name the inbound security rule.
  1. **Source**: Select **Any**.
  1. **Source port range**: Enter `*`.
  1. **Destination**: Select **Any**.
  1. **Destination port range**: Enter `9021,8443`.
1. Click **OK**.

##<a id='verify'></a> Verify Hostname Resolution

1. In a browser, log into Ops Manager.
1. Click the **<%= vars.product_tile %>** tile.
1. Select **PKS API**.
1. Record the **API Hostname (FQDN)**.
1. Verify that the API hostname resolves to the IP address of the load balancer.

##<a id='next-step'></a> Next Step

After you have configured an Azure load balancer for the PKS API,
complete the <%= vars.product_short %> installation by returning to the
[Install the PKS and Kubernetes CLIs](installing-pks-azure.html#clis)
step of _Installing <%= vars.product_short %> on Azure_.
